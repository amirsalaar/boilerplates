stages:
  - build_test
  - analyze_test

before_script:
  - mkdir -p ~/.ssh &&
    cp $gitlab_private_key ~/.ssh/id_ed25519 &&
    chmod 600 ~/.ssh/id_ed25519 &&
    touch ~/.ssh/known_hosts &&
    ssh-keyscan gitlab.com >> ~/.ssh/``known_hosts

include:
  - template: Code-Quality.gitlab-ci.yml

test-merge-request:
  stage: build_test
  only:
    - merge_requests
    - master
  image:
    name: docker:19.03.13-git
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - build
  services:
    - name: docker:19.03.0-dind
      entrypoint: ["env", "-u", "DOCKER_HOST"]
      command: ["dockerd-entrypoint.sh"]
  variables:
    DOCKER_HOST: tcp://localhost:2375
    DOCKER_TLS_CERTDIR: ""
    DOCKER_DRIVER: overlay2
    ENV: test
    CI_DEBUG_TRACE: "true"
  before_script:
    - echo $CI_BUILD_TOKEN | docker login -u gitlab-ci-token --password-stdin ${CI_REGISTRY}
  script:
    - echo "Running Tests..."
    - cp ${group_shared_vars} ${CI_PROJECT_DIR}/.env
    - docker build . -f Dockerfile-testing -t test_merge_req --build-arg GITLAB_PROJECT_ID=${GITLAB_PROJECT_ID}
    - docker run --cidfile="briq-package.txt" test_merge_req:latest
  after_script:
    - docker cp $(cat briq-package.txt):/app/tests/coverage/coverage.xml build/coverage.xml
  timeout: 2h
  artifacts:
    when: always
    paths:
      - build
    reports:
      cobertura:
        - build/coverage.xml
    expire_in: 30 min
  coverage: '/TOTAL.*\s+(\d+%)$/'

code_quality:
  stage: analyze_test
  artifacts:
    paths: [gl-code-quality-report.json]
    expire_in: 30 days
