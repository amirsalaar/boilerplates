[tool.poetry]
name = "flask-api-template"
version = "0.1.0"
description = "This is a Flask API template to create Python backend services"
authors = ["Amirsalar Heydari <amirsalaar@gmail.com>"]

[tool.poetry.dependencies]
python = ">=3.9.8"
Flask = "^2.0.3"
waitress = "^2.1.1"
python-dotenv = "^0.20.0"
uvicorn = "^0.17.6"

[tool.poetry.group.dev.dependencies]
Flask-Cors = "^3.0.10"
autopep8 = "^1.6.0"
pre-commit = "^2.17.0"
pytest = "^7.1.1"
pytest-mock = "^3.7.0"
pytest-cov = "^3.0.0"
pytest-watch = "^4.2.0"
flake8 = "^4.0.1"
flake8-docstrings = "^1.6.0"
mypy = "^0.991"
isort = "^5.11.4"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest]
addopts = "-v --cov --cov-config=.coveragerc --cov-report term --cov-report html --cov-report xml --no-cov-on-fail"

[tool.isort]
profile = "black"
extend_skip = [".md", ".json", ".js", ".ts", ".tsx"]
skip = [".gitignore", ".dockerignore"]
skip_glob = [
    "*/migrations/*",
    "*/**/__init__.py",
    "*/.venv/*",
    "*/.mypy_cache/*",
    "*/.pytest_cache/*",
    "*/__pycache__/*"
]

[tool.black]
include = '\.pyi?$'

[tool.flake8]
max-line-length = 119
per-file-ignores = [
    "./**/conftest.py: F401",
    "./**/__init__.py: F401,F403"
]
exclude = [
    ".git",
    "__pycache__",
    "old",
    "build",
    "dist",
    "**/denv",
    "*migrations*",
]
